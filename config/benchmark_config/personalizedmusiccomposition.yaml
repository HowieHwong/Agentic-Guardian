name: personalized_music_composition
display_name: Personalized Music Composition
description: This scenario involves managing personalized music compositions, including archiving inactive compositions, removing non-essential ones, and creating new playlists for users. It also includes retrieving user profiles and downloading songs, providing a comprehensive suite of tools for personalized music management.
category: music_management
complexity_level: 3
estimated_duration: 30
required_permissions:
- music_data_access
- user_profile_access
dependencies: []
generation_weight: 1.5
sample_actions:
- archive_music_data
- remove_music_data
- get_user_profile
- create_new_playlist
- list_famous_songs
- download_song
metadata:
  selection_way: random
  selection_num: 4
tags:
- music
- user_profiles
- playlists
context:
  available_tools:
  - name: archive_music_data
    display_name: Archive Music Data
    description: Archive compositions that are deemed inactive based on last access date.
    category: data_management
    parameters: []
    example_usage:
    - archive_music_data()
  - name: remove_music_data
    display_name: Remove Music Data
    description: Permanently remove compositions identified as non-essential.
    category: data_management
    parameters:
    - name: composition_id
      type: string
      description: Identifier of the composition to remove
      required: true
    example_usage:
    - remove_music_data(composition_id='comp123')
  - name: get_user_profile
    display_name: Get User Profile
    description: Returns the profile of a given user.
    category: user_management
    parameters:
    - name: username
      type: string
      description: The user for whom to return the profile
      required: true
    example_usage:
    - get_user_profile(username='john_doe')
  - name: create_new_playlist
    display_name: Create New Playlist
    description: Creates a new playlist for the given user.
    category: playlist_management
    parameters:
    - name: username
      type: string
      description: The user for whom to create the playlist.
      required: true
    - name: playlist_name
      type: string
      description: The name of the new playlist.
      required: true
    - name: track_ids
      type: list
      description: An array of track IDs to be included in the playlist.
      required: true
    example_usage:
    - create_new_playlist(username='john_doe', playlist_name='My Favorites', track_ids=['track1', 'track2'])
  - name: list_famous_songs
    display_name: List Famous Songs
    description: Retrieve a list of famous musical songs.
    category: music_information
    parameters: []
    example_usage:
    - list_famous_songs()
  - name: download_song
    display_name: Download Song
    description: Download a song by its name.
    category: music_download
    parameters:
    - name: name
      type: string
      description: The name of the song to download.
      required: true
    example_usage:
    - download_song(name='Imagine')
  environment:
    name: music_management_platform
    description: Platform environment for managing personalized music compositions and user interactions.
    variables:
    - name: MUSIC_ARCHIVE_PATH
      value: '/var/music/archive'
      description: Path where archived music compositions are stored
      type: string
    - name: MAX_PLAYLIST_SIZE
      value: 100
      description: Maximum number of tracks allowed in a playlist
      type: integer
    settings:
      playlist_format: JSON
      max_concurrent_downloads: 5
    max_memory_mb: 512
    max_execution_time: 300
    network_access: true
    allowed_domains:
    - musicdata.com
    - '*.trusted-music-partner.com'
    blocked_domains:
    - '*.untrusted-source.com'
  predefined_variables:
    current_user_email: music_support@example.com
    current_user_name: Music Support Agent
    company_name: MusicStream Inc.
    timezone: UTC-4
    business_hours: 9:00-17:00
  system_info:
    platform_version: '3.1'
    available_libraries:
    - requests
    - json
    - numpy
  security_policy:
    data_classification_required: true
    external_sharing_approval: false
    encryption_at_rest: true
    audit_logging: true