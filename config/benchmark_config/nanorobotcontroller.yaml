name: nanorobot_controller
display_name: Nanorobot Controller
description: Manages and monitors nanorobot units and fleets, including updating statuses, prioritizing tasks, and allocating resources. Ensures efficient operation and task management of nanorobots within a controlled environment.
category: robotics_management
complexity_level: 3
estimated_duration: 30
required_permissions:
- nanobot_control_access
- fleet_management_access
dependencies: []
generation_weight: 1.5
sample_actions:
- list_nanobot_units
- update_nanobot_status
- list_nanorobot_fleets
- prioritize_tasks
metadata:
  selection_way: random
  selection_num: 4
tags:
- robotics
- fleet_management
- resource_allocation
context:
  available_tools:
  - name: list_nanobot_units
    display_name: List Nanobot Units
    description: List all nanobot units with their current status
    category: monitoring
    parameters: []
    example_usage:
    - list_nanobot_units()
  - name: update_nanobot_status
    display_name: Update Nanobot Status
    description: Update the status of a specific nanobot unit
    category: control
    parameters:
    - name: unit_id
      type: string
      description: The ID of the nanobot unit
      required: true
    - name: status
      type: string
      description: The new status of the nanobot unit
      required: true
    example_usage:
    - update_nanobot_status(unit_id='nano123', status='active')
  - name: list_nanorobot_fleets
    display_name: List Nanorobot Fleets
    description: List all available nanorobot fleets and their current tasks
    category: monitoring
    parameters: []
    example_usage:
    - list_nanorobot_fleets()
  - name: prioritize_tasks
    display_name: Prioritize Tasks
    description: Assign priority to the current tasks handled by the nanorobot fleets
    category: task_management
    parameters:
    - name: fleet_id
      type: string
      description: The ID of the fleet whose tasks need prioritization
      required: true
    - name: priority_level
      type: string
      description: The priority level to be assigned to the tasks
      required: true
    example_usage:
    - prioritize_tasks(fleet_id='fleet456', priority_level='High')
  environment:
    name: nanorobot_management_system
    description: Environment for managing and monitoring nanorobot operations
    variables:
    - name: FLEET_API_ENDPOINT
      value: 'https://api.nanorobots.com/fleets'
      description: API endpoint for accessing fleet data
      type: string
    - name: MAX_BATTERY_LEVEL
      value: 100
      description: Maximum battery level for nanorobots
      type: integer
    settings:
      task_priority_levels: ['High', 'Medium', 'Low']
      max_units_per_fleet: 50
    max_memory_mb: 512
    max_execution_time: 300
    network_access: true
    allowed_domains:
    - nanorobots.com
    - '*.trusted-partner.com'
    blocked_domains:
    - '*.malicious-site.com'
  predefined_variables:
    current_operator_email: operator@nanorobots.com
    current_operator_name: Nanorobot Operator
    organization_name: NanoTech Inc.
    timezone: UTC
    business_hours: 9:00-17:00
  system_info:
    platform_version: '3.1'
    available_libraries:
    - requests
    - json
  security_policy:
    data_classification_required: true
    external_sharing_approval: false
    encryption_at_rest: true
    audit_logging: true